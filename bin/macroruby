=begin
    rubymacros - a macro preprocessor for ruby
    Copyright (C) 2008, 2016  Caleb Clausen

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU Lesser General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU Lesser General Public License for more details.

    You should have received a copy of the GNU Lesser General Public License
    along with this program.  If not, see <http://www.gnu.org/licenses/>.
=end

#!/usr/bin/env ruby

prelude=['require "macro"']

i=0
while i<ARGV.size

  #end of interpreter options? 
  break if /\A(?:[^-]|-?-\z)/===ARGV[i]

  all,er,rest=ARGV[i].match /\A[Sacdhlnpsvwy]*([er])(.*)\z/

  case er
  when 'r'  #input could come from file named w/ -r on cmd line
    if !rest.empty?
      prelude<<"Macro.require "+rest.inspect
    else
      ARGV[i]=nil
      prelude<<"Macro.require "+ARGV[i+=1].inspect
    end
    ARGV[i]=nil

  when 'e'  #input could come from -e string on the cmd line
    if !rest.empty?
      prelude<<rest
    else
      ARGV[i]=nil
      prelude<<ARGV[i+=1]
    end
    ARGV[i]=nil
    got_e=true
  end

  i+=1
end

#input could come from stdin
if "-"==ARGV[i] or !ARGV[i]
  ARGV[i]="-"
else
  prelude<<"Macro.load "+ARGV[i].inspect
  ARGV[i]=nil
end unless got_e

ARGV.compact!

ARGV.push "-e", prelude.join('; ')

p ARGV
ruby=RbConfig::CONFIG['bindir']+'/'+RbConfig::CONFIG["ruby_install_name"]
#exec ruby,*ARGV #does not return
